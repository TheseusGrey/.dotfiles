---
- name: Ensure config directory exists
  file:
    dest: "~/.config/zsh"
    state: directory


- name: Setup zsh config files
  tags:
    - zsh
    - terminal
  block:
    - name: Ensure file to put machine specific config exists
      ansible.builtin.file:
        path: "~/env_specific.sh"
        state: touch
        mode: 777
    - name: Populate env.sh with some defaults
      ansible.builtin.lineinfile:
        path: "~/env_specific.sh"
        state: present
        regexp: "^export {{ item.key }}="
        line: "export {{ item.key }}={{ item.value }}"
      with_items:
        - { key: DOTFILES, value: "{{ dotfiles_home }}" }
        - { key: EDITOR, value: nvim }

    # This goes in env specific since this might change from machine
    # to machine. We just get it started with some reasonable defaults
    - name: Populate PATH variable
      vars:
        paths:
          - "~/.local/bin"
          - "~/.cargo/bin"
          - "~/tools/nvim/bin"
          - "$PATH" # This should always come last
      ansible.builtin.lineinfile:
        path: "~/env_specific.sh"
        state: present
        regexp: "^export PATH="
        line: 'export PATH="{{ paths | join('':'') }}"'
        
    # Symlink RC file
    - name: Symlink zshrc
      file:
        src: "{{ dotfiles_home }}/zsh/.zshrc"
        dest: "~/.zshrc"
        state: link

    - name: Find terminal Config
      find:
        paths: "{{ dotfiles_home }}/zsh"
        patterns: "*.sh,*.zsh"
      register: terminal_config

# Symlink config files
- name: Symlink terminal config
  file:
    src: "{{ item.path }}"
    dest: "{{ dotfiles_home }}/../.config/zsh/{{ item.path | split('/') | last }}"
    state: link
  with_items: "{{ terminal_config.files }}"
