---
- name: Ensure config directory exists
  file:
    dest: "{{ dotfiles_home }}/../config"
    state: directory

# Creating and populating env variables
- name: Ensure .env.sh exists
  copy:
    content: ""
    dest: "{{ root }}/config/.env.sh"
    force: false
    mode: 777
- name: Populate .env.sh variables
  lineinfile:
    path: "{{ root }}/config/.env.sh"
    state: present
    regexp: "^export {{ item.key }}="
    line: "export {{ item.key }}={{ item.value }}"
  with_items:
    - { key: DOTFILES, value: "{{ dotfiles_home }}" }
    - { key: EDITOR, value: nvim }
    - { key: VISUAL, value: neovide }
    - { key: PYENV_ROOT, value: "$HOME/.pyenv" }
# Updating the PATH variable
- name: Populate PATH variable
  vars:
    paths:
      - "$PYENV_ROOT/bin"
      - "~/.local/bin"
      - "~/.cargo/bin"
      - "~/.local/lib/python3.10/site-packages"
      - "$PATH" # This should always come last
  lineinfile:
    path: "{{ root }}/config/.env.sh"
    state: present
    regexp: "^export PATH="
    line: 'export PATH="{{ paths | join('':'') }}"'
# Symlink RC file
- name: Symlink zshrc
  file:
    src: "{{ dotfiles_home }}/terminal/rc"
    dest: "{{ dotfiles_home }}/../.zshrc"
    state: link

# Find config files to link
- name: Find terminal Config
  find:
    paths: "{{ dotfiles_home }}/terminal"
    patterns: "*.sh,*.zsh"
  register: terminal_config

# Symlink config files
- name: Symlink terminal config
  file:
    src: "{{ item.path }}"
    dest: "{{ dotfiles_home }}/../config/{{ item.path | split('/') | last }}"
    state: link
  with_items: "{{ terminal_config.files }}"
